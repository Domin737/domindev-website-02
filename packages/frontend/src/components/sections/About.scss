@use "../../styles/variables" as *;

.about {
  background: linear-gradient(
    180deg,
    $color-dark-purple 0%,
    $color-background-darker 100%
  );
  position: relative;
  overflow: hidden;

  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(
      circle at 30% 30%,
      rgba($color-secondary, 0.1) 0%,
      transparent 60%
    );
    pointer-events: none;
  }

  &__content {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: $spacing-lg;
    align-items: center;
    position: relative;

    @media (max-width: $breakpoint-md) {
      grid-template-columns: 1fr;
    }
  }

  &__text {
    animation: fadeInLeft 1s ease-out;

    p {
      font-size: 1.1rem;
      color: $color-text-secondary;
      margin-bottom: $spacing-md;
      word-wrap: break-word;
      overflow-wrap: break-word;
      hyphens: auto;
      line-height: 1.8;
      position: relative;
      padding-left: $spacing-md;

      &::before {
        content: "";
        position: absolute;
        left: 0;
        top: 0.5em;
        width: 2px;
        height: 1em;
        background: $gradient-primary;
        box-shadow: $neon-glow-primary;
      }

      @media (max-width: $breakpoint-md) {
        font-size: 1rem;
        padding-right: $spacing-sm;
      }
    }
  }

  &__skills {
    list-style: none;
    animation: fadeInUp 1s ease-out 0.2s backwards;

    li {
      font-size: 1.2rem;
      margin-bottom: $spacing-sm;
      display: flex;
      align-items: center;
      gap: $spacing-sm;
      padding: $spacing-sm;
      background: rgba($color-background-darker, 0.3);
      border: 1px solid rgba($color-secondary, 0.1);
      transition: $transition-hover;
      clip-path: polygon(
        15px 0,
        100% 0,
        100% calc(100% - 15px),
        calc(100% - 15px) 100%,
        0 100%,
        0 15px
      );
      border-radius: 2px;

      &:hover {
        transform: $animation-hover-scale;
        border-color: rgba($color-secondary, 0.3);
        box-shadow: $neon-glow-secondary;
      }

      span {
        font-weight: $font-weight-bold;
        background: $gradient-text;
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
      }
    }
  }

  &__icons {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: $spacing-md;
    text-align: center;
    animation: fadeInRight 1s ease-out 0.4s backwards;

    @media (max-width: $breakpoint-sm) {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  &__icon {
    padding: $spacing-md;
    background: rgba($color-background-darker, 0.5);
    backdrop-filter: blur(10px);
    border: 1px solid rgba($color-secondary, 0.1);
    transition: $transition-smooth;
    cursor: pointer;
    position: relative;
    clip-path: polygon(
      15px 0,
      100% 0,
      100% calc(100% - 15px),
      calc(100% - 15px) 100%,
      0 100%,
      0 15px
    );
    border-radius: 2px;

    &::before {
      content: "";
      position: absolute;
      inset: 0;
      background: $gradient-primary;
      opacity: 0;
      transition: $transition-hover;
      z-index: -1;
      clip-path: inherit;
    }

    i {
      font-size: 2.5rem;
      margin-bottom: $spacing-sm;
      background: $gradient-text;
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      transition: $transition-hover;
    }

    span {
      display: block;
      font-size: 1rem;
      color: $color-text-secondary;
      transition: $transition-hover;
    }

    &:hover {
      transform: $animation-hover-scale;
      border-color: rgba($color-secondary, 0.3);
      box-shadow: $neon-glow-secondary;

      &::before {
        opacity: 0.05;
      }

      i {
        transform: scale(1.1);
        text-shadow: $neon-glow-primary;
      }

      span {
        color: $color-text;
      }
    }

    &:active {
      transform: $animation-click-scale;
    }
  }
}

@keyframes fadeInLeft {
  from {
    opacity: 0;
    transform: translateX(-30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fadeInRight {
  from {
    opacity: 0;
    transform: translateX(30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
